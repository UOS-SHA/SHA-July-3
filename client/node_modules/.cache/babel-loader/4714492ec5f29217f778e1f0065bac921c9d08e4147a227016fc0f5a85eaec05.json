{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/SHA-July-3/client/src/Post/Post.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Post.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = ({\n  postId\n}) => {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const fetcher = async () => {\n      try {\n        const response = await fetch('/api/post/' + postId);\n        const data = await response.json();\n        setData(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetcher();\n  }, [postId]);\n  if (data === null) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 11\n  }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: data.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"by \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: '/user/' + data.user_id,\n        children: data.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), \" on \", new Date(data.creation_time).toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u2764\\uFE0F \", data.likes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-section\",\n      children: data.comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uB313\\uAE00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 6\n      }, this) : data.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: '/user/' + comment.user_id,\n            children: comment.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 11\n          }, this), \" on \", new Date(comment.creation_time).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 4\n  }, this);\n};\n_s(Post, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Post","postId","_s","data","setData","fetcher","response","fetch","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","href","user_id","username","Date","creation_time","toLocaleString","content","likes","comments","length","map","comment","_c","$RefreshReg$"],"sources":["/home/ubuntu/SHA-July-3/client/src/Post/Post.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Post.css';\n\nconst Post = ({postId}) => {\n\tconst [data, setData] = useState(null);\n\n\tuseEffect(() => {\n\t\tconst fetcher = async() => {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch('/api/post/' + postId);\n\t\t\t\tconst data = await response.json();\n\t\t\t\tsetData(data);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Error fetching data:', error);\n\t\t\t}\n\t\t};\n\n\t\tfetcher();\n\t}, [postId]);\n\n\tif (data === null)\n\t\treturn (<h1>Loading...</h1>);\n\telse\n\t\treturn (\n\t\t\t<div className=\"post-container\">\n\t\t\t<h1>{data.title}</h1>\n\t\t\t<h3>by <a href={'/user/' + data.user_id}>{data.username}</a> on {new Date(data.creation_time).toLocaleString()}</h3>\n\t\t\t<p>{data.content}</p>\n\t\t\t<p>❤️ {data.likes}</p>\n\t\t\t<div className=\"comment-section\">\n\t\t\t{\n\t\t\t\tdata.comments.length === 0 ?\n\t\t\t\t\t<div>\n\t\t\t\t\t<p>댓글이 없습니다.</p>\n\t\t\t\t\t</div>\n\t\t\t\t:\n\t\t\t\t\tdata.comments.map(comment => (\n\t\t\t\t\t\t<div className=\"comment\">\n\t\t\t\t\t\t<h3><a href={'/user/' + comment.user_id}>{comment.username}</a> on {new Date(comment.creation_time).toLocaleString()}</h3>\n\t\t\t\t\t\t<p>{comment.content}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))\n\t\t\t}\n\t\t\t</div>\n\t\t\t</div>\n\t\t);\n};\n\nexport default Post;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}