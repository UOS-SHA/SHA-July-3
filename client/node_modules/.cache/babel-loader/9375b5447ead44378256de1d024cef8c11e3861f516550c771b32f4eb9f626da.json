{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/SHA-July-3/client/src/Post/Post.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = postId => {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const fetcher = async () => {\n      try {\n        const response = await fetch('api/post/' + postId);\n        const data = await response.json();\n        setData(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetcher();\n  });\n  if (data === null) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 11\n  }, this);else return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Testing\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 4\n  }, this);\n};\n_s(Post, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Post","postId","_s","data","setData","fetcher","response","fetch","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ubuntu/SHA-July-3/client/src/Post/Post.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Post = (postId) => {\n\tconst [data, setData] = useState(null);\n\n\tuseEffect(() => {\n\t\tconst fetcher = async() => {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch('api/post/' + postId);\n\t\t\t\tconst data = await response.json();\n\t\t\t\tsetData(data);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Error fetching data:', error);\n\t\t\t}\n\t\t};\n\n\t\tfetcher();\n\t});\n\n\tif (data === null)\n\t\treturn (<h1>Loading...</h1>);\n\telse\n\t\treturn (\n\t\t\t<h2>Testing</h2>\n\t\t);\n};\n\nexport default Post;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,IAAI,GAAIC,MAAM,IAAK;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACf,MAAMQ,OAAO,GAAG,MAAAA,CAAA,KAAW;MAC1B,IAAI;QACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAW,GAAGN,MAAM,CAAC;QAClD,MAAME,IAAI,GAAG,MAAMG,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClCJ,OAAO,CAACD,IAAI,CAAC;MACd,CAAC,CAAC,OAAOM,KAAK,EAAE;QACfC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC7C;IACD,CAAC;IAEDJ,OAAO,CAAC,CAAC;EACV,CAAC,CAAC;EAEF,IAAIF,IAAI,KAAK,IAAI,EAChB,oBAAQJ,OAAA;IAAAY,QAAA,EAAI;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,CAAE,KAE7B,oBACChB,OAAA;IAAAY,QAAA,EAAI;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAEnB,CAAC;AAACb,EAAA,CAvBIF,IAAI;AAAAgB,EAAA,GAAJhB,IAAI;AAyBV,eAAeA,IAAI;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}